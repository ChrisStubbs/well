// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PH.Well.BDD.Features.ACL
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AdamRouteFileSchemaValidation")]
    public partial class AdamRouteFileSchemaValidationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AdamRouteFileSchemaValidation.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AdamRouteFileSchemaValidation", "\tIn order to import correctly formed ADAM route files\r\n\tAs a math idiot\r\n\tI want " +
                    "to be able to validate exsisting ADAM route files against a pre defined schema", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the CompanyID node missing from the first route heade" +
            "r node")]
        public virtual void ImportADAMRouteFileWithTheCompanyIDNodeMissingFromTheFirstRouteHeaderNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the CompanyID node missing from the first route heade" +
                    "r node", ((string[])(null)));
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingCompanyNode.xml\' with a \'Rout" +
                    "eHeader\' node at position \'0\' with the \'CompanyID\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.When("I import the route file \'PH_ROUTES_MissingCompanyNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingCompanyNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'RouteHeader' has invalid child element 'RouteNumber'. List of possible elements expected: 'CompanyID'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the PlannedStopNumber missing from the first stop nod" +
            "e")]
        public virtual void ImportADAMRouteFileWithThePlannedStopNumberMissingFromTheFirstStopNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the PlannedStopNumber missing from the first stop nod" +
                    "e", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingPlannedStopNumberNode.xml\' wi" +
                    "th a \'Stop\' node at position \'0\' with the \'PlannedStopNumber\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.When("I import the route file \'PH_ROUTES_MissingPlannedStopNumberNode.xml\' into the wel" +
                    "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingPlannedStopNumberNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'Stop' has invalid child element 'PlannedArriveTime'. List of possible elements expected: 'PlannedStopNumber'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the Code missing from the Account node child of the f" +
            "irst stop node")]
        public virtual void ImportADAMRouteFileWithTheCodeMissingFromTheAccountNodeChildOfTheFirstStopNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the Code missing from the Account node child of the f" +
                    "irst stop node", ((string[])(null)));
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingCodeFromAccountNode.xml\' with" +
                    " a \'Account\' node at position \'0\' with the \'Code\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When("I import the route file \'PH_ROUTES_MissingCodeFromAccountNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingCodeFromAccountNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'Account' has invalid child element 'AccountTypeCode'. List of possible elements expected: 'Code'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the JobRef1 missing from the Job node child of the fi" +
            "rst Jobs node")]
        public virtual void ImportADAMRouteFileWithTheJobRef1MissingFromTheJobNodeChildOfTheFirstJobsNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the JobRef1 missing from the Job node child of the fi" +
                    "rst Jobs node", ((string[])(null)));
#line 21
this.ScenarioSetup(scenarioInfo);
#line 22
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingJobRef1FromJobNode.xml\' with " +
                    "a \'Job\' node at position \'0\' with the \'JobRef1\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 23
 testRunner.When("I import the route file \'PH_ROUTES_MissingJobRef1FromJobNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingJobRef1FromJobNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'Job' has invalid child element 'JobRef2'. List of possible elements expected: 'JobRef1'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the Barcode missing from the JobDetail node child of " +
            "the first JobDetails node")]
        public virtual void ImportADAMRouteFileWithTheBarcodeMissingFromTheJobDetailNodeChildOfTheFirstJobDetailsNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the Barcode missing from the JobDetail node child of " +
                    "the first JobDetails node", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingBarcodeFromJobDetailNode.xml\'" +
                    " with a \'JobDetail\' node at position \'0\' with the \'Barcode\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.When("I import the route file \'PH_ROUTES_MissingBarcodeFromJobDetailNode.xml\' into the " +
                    "well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingBarcodeFromJobDetailNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'JobDetail' has invalid child element 'OriginalDespatchQty'. List of possible elements expected: 'Barcode'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
