// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PH.Well.BDD.Features.ACL
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AdamRouteFileSchemaValidation")]
    public partial class AdamRouteFileSchemaValidationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AdamRouteFileSchemaValidation.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AdamRouteFileSchemaValidation", "\tIn order to import correctly formed ADAM route files\r\n\tAs a user\r\n\tI want the sy" +
                    "stem to be able to validate exsisting ADAM route files against a pre defined sch" +
                    "ema", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the CompanyID node missing from the first route heade" +
            "r node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithTheCompanyIDNodeMissingFromTheFirstRouteHeaderNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the CompanyID node missing from the first route heade" +
                    "r node", new string[] {
                        "Ignore"});
#line 7
this.ScenarioSetup(scenarioInfo);
#line 8
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingCompanyNode.xml\' with a \'Rout" +
                    "eHeader\' node at position \'0\' with the \'CompanyID\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.When("I import the route file \'PH_ROUTES_MissingCompanyNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingCompanyNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'RouteHeader' has invalid child element 'RouteNumber'. List of possible elements expected: 'CompanyID'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the PlannedStopNumber missing from the first stop nod" +
            "e")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithThePlannedStopNumberMissingFromTheFirstStopNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the PlannedStopNumber missing from the first stop nod" +
                    "e", new string[] {
                        "Ignore"});
#line 13
this.ScenarioSetup(scenarioInfo);
#line 14
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingPlannedStopNumberNode.xml\' wi" +
                    "th a \'Stop\' node at position \'0\' with the \'PlannedStopNumber\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.When("I import the route file \'PH_ROUTES_MissingPlannedStopNumberNode.xml\' into the wel" +
                    "l", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingPlannedStopNumberNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'Stop' has invalid child element 'PlannedArriveTime'. List of possible elements expected: 'PlannedStopNumber'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the Code missing from the Account node child of the f" +
            "irst stop node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithTheCodeMissingFromTheAccountNodeChildOfTheFirstStopNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the Code missing from the Account node child of the f" +
                    "irst stop node", new string[] {
                        "Ignore"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 19
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingCodeFromAccountNode.xml\' with" +
                    " a \'Account\' node at position \'0\' with the \'Code\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.When("I import the route file \'PH_ROUTES_MissingCodeFromAccountNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("The schema validation error should be \"file PH_ROUTES_MissingCodeFromAccountNode." +
                    "xml failed schema validation with the following: System.Xml.XsdValidatingReader:" +
                    "\tThe element \'Account\' has incomplete content. List of possible elements expecte" +
                    "d: \'Code\'.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the JobRef1 missing from the Job node child of the fi" +
            "rst Jobs node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithTheJobRef1MissingFromTheJobNodeChildOfTheFirstJobsNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the JobRef1 missing from the Job node child of the fi" +
                    "rst Jobs node", new string[] {
                        "Ignore"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 24
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingJobRef1FromJobNode.xml\' with " +
                    "a \'Job\' node at position \'0\' with the \'PHAccount\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 25
 testRunner.When("I import the route file \'PH_ROUTES_MissingJobRef1FromJobNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingJobRef1FromJobNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'Job' has invalid child element 'PickListRef'. List of possible elements expected: 'PHAccount'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the Barcode missing from the JobDetail node child of " +
            "the first JobDetails node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithTheBarcodeMissingFromTheJobDetailNodeChildOfTheFirstJobDetailsNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the Barcode missing from the JobDetail node child of " +
                    "the first JobDetails node", new string[] {
                        "Ignore"});
#line 29
this.ScenarioSetup(scenarioInfo);
#line 30
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_MissingBarcodeFromJobDetailNode.xml\'" +
                    " with a \'JobDetail\' node at position \'0\' with the \'PHProductCode\' node missing", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.When("I import the route file \'PH_ROUTES_MissingBarcodeFromJobDetailNode.xml\' into the " +
                    "well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.Then(@"The schema validation error should be ""file PH_ROUTES_MissingBarcodeFromJobDetailNode.xml failed schema validation with the following: System.Xml.XsdValidatingReader:	The element 'JobDetail' has invalid child element 'OriginalDespatchQty'. List of possible elements expected: 'PHProductCode'.""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with the additional CompanyName node added to the first fi" +
            "rst route header node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithTheAdditionalCompanyNameNodeAddedToTheFirstFirstRouteHeaderNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with the additional CompanyName node added to the first fi" +
                    "rst route header node", new string[] {
                        "Ignore"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 35
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_AdditionalCompanyNameNode.xml\' with " +
                    "a \'RouteHeader\' node at position \'0\' with a \'CompanyName2\' node added with a val" +
                    "ue of \'NewCompanyName\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.When("I import the route file \'PH_ROUTES_AdditionalCompanyNameNode.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("The schema validation error should be \"file PH_ROUTES_AdditionalCompanyNameNode.x" +
                    "ml failed schema validation with the following: System.Xml.XsdValidatingReader:\t" +
                    "The element \'RouteHeader\' has invalid child element \'CompanyName2\'.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with a duplicate TransportOrderRef node added to the first" +
            " first Stop node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithADuplicateTransportOrderRefNodeAddedToTheFirstFirstStopNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with a duplicate TransportOrderRef node added to the first" +
                    " first Stop node", new string[] {
                        "Ignore"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 40
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_30062016_02_AddedTransportRef.xml\' w" +
                    "ith a \'Stop\' node at position \'0\' with a \'TransportOrderRef\' node added with a v" +
                    "alue of \'001 01 49214.152 01/07/2016\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.When("I import the route file \'PH_ROUTES_30062016_02_AddedTransportRef.xml\' into the we" +
                    "ll", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 42
 testRunner.Then("The schema validation error should be \"file PH_ROUTES_30062016_02_AddedTransportR" +
                    "ef.xml failed schema validation with the following: System.Xml.XsdValidatingRead" +
                    "er:\tThe element \'Stop\' has invalid child element \'TransportOrderRef\'.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Import ADAM route file with a duplicate JobRef1 node added to the first first job" +
            " node")]
        [NUnit.Framework.IgnoreAttribute("Ignored scenario")]
        public virtual void ImportADAMRouteFileWithADuplicateJobRef1NodeAddedToTheFirstFirstJobNode()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Import ADAM route file with a duplicate JobRef1 node added to the first first job" +
                    " node", new string[] {
                        "Ignore"});
#line 44
this.ScenarioSetup(scenarioInfo);
#line 45
 testRunner.Given("I have an invalid ADAM route file \'PH_ROUTES_30062016_02_AddedJobRef.xml\' with a " +
                    "\'Job\' node at position \'0\' with a \'PHAccount\' node added with a value of \'49214." +
                    "152\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.When("I import the route file \'PH_ROUTES_30062016_02_AddedJobRef.xml\' into the well", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.Then("The schema validation error should be \"file PH_ROUTES_30062016_02_AddedJobRef.xml" +
                    " failed schema validation with the following: System.Xml.XsdValidatingReader:\tTh" +
                    "e element \'Job\' has invalid child element \'PHAccount\'.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
