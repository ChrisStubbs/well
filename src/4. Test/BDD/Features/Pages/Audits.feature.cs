// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.0.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace PH.Well.BDD.Features.Pages
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Audit viewing")]
    [NUnit.Framework.CategoryAttribute("WebDriverFeature")]
    [NUnit.Framework.CategoryAttribute("RoleSuperUser")]
    public partial class AuditViewingFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Audits.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Audit viewing", "\tAs a user\r\n\tI wish to be able to view and filter audits\r\n\tso that I can see what" +
                    " activities users have performed in The Well", ProgrammingLanguage.CSharp, new string[] {
                        "WebDriverFeature",
                        "RoleSuperUser"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
 testRunner.Given("I have a clean database", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Audit paging")]
        public virtual void AuditPaging()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Audit paging", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 12
 testRunner.Given("25 audit entries have been made", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.When("I open the audits page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("\'10\' rows of audit data will be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 15
 testRunner.When("I click on audit page 3", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("\'5\' rows of audit data will be displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Audit filtering")]
        public virtual void AuditFiltering()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Audit filtering", ((string[])(null)));
#line 18
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 19
 testRunner.Given("5 audit entries have been made", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.When("I open the audits page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Entry",
                        "Type",
                        "InvoiceNo",
                        "Account",
                        "DeliveryDate"});
            table1.AddRow(new string[] {
                        "Audit 123",
                        "DeliveryLineUpdate",
                        "987654",
                        "123456",
                        "20/01/2016"});
            table1.AddRow(new string[] {
                        "Audit 123",
                        "DeliveryLineUpdate",
                        "987654",
                        "123456",
                        "20/01/2016"});
            table1.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
            table1.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
            table1.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
#line 21
 testRunner.Then("the following audit entries are shown", ((string)(null)), table1, "Then ");
#line 29
 testRunner.When("I filter the audits grid with the option \'Invoice No\' and value \'987654\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Entry",
                        "Type",
                        "InvoiceNo",
                        "Account",
                        "DeliveryDate"});
            table2.AddRow(new string[] {
                        "Audit 123",
                        "DeliveryLineUpdate",
                        "987654",
                        "123456",
                        "20/01/2016"});
            table2.AddRow(new string[] {
                        "Audit 123",
                        "DeliveryLineUpdate",
                        "987654",
                        "123456",
                        "20/01/2016"});
#line 30
 testRunner.Then("the following audit entries are shown", ((string)(null)), table2, "Then ");
#line 36
 testRunner.When("I filter the audits grid with the option \'Account\' and value \'88888\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Entry",
                        "Type",
                        "InvoiceNo",
                        "Account",
                        "DeliveryDate"});
            table3.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
            table3.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
            table3.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
#line 37
 testRunner.Then("the following audit entries are shown", ((string)(null)), table3, "Then ");
#line 43
 testRunner.When("I filter the audits grid with the option \'Delivery Date\' and value \'15/05/2016\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Entry",
                        "Type",
                        "InvoiceNo",
                        "Account",
                        "DeliveryDate"});
            table4.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
            table4.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
            table4.AddRow(new string[] {
                        "Audit 456",
                        "DeliveryLineUpdate",
                        "55555",
                        "88888",
                        "15/05/2016"});
#line 44
 testRunner.Then("the following audit entries are shown", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
